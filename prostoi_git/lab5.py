import re

def task1():
    text = input("–í–≤–µ–¥–∏—Ç–µ —Å—Ç—Ä–æ–∫—É: ")
    x = re.findall(r"ab*", text)
    print(x)

def task2():
    text = input("–í–≤–µ–¥–∏—Ç–µ —Å—Ç—Ä–æ–∫—É: ")
    x = re.findall(r"ab{2,3}", word)
    print(x)

def task3():
    text = input("–í–≤–µ–¥–∏—Ç–µ —Å—Ç—Ä–æ–∫—É: ")
    x = re.findall(r"[a-z]+_[a-z]+", text)
    print(x) 

def task4():
    text = input("–í–≤–µ–¥–∏—Ç–µ —Å—Ç—Ä–æ–∫—É: ")
    x = re.findall(r"[A-Z][a-z]+", text)
    print(x)    

def task5():
    text = input("–í–≤–µ–¥–∏—Ç–µ —Å—Ç—Ä–æ–∫—É: ")
    x = re.findall(r"a.*b$", text)
    print(x)

def task6():
    text = input("–í–≤–µ–¥–∏—Ç–µ —Å—Ç—Ä–æ–∫—É: ")
    x = re.sub("[, .]",":", text)
    print(x)

def task7():
    x = input("–í–≤–µ–¥–∏—Ç–µ snake_case —Å—Ç—Ä–æ–∫—É: ")
    x = re.sub(r"_([a-z])", lambda x: x.group(1).upper(), s)
    print("Camel case:", x)

def task8():
    text = input("–í–≤–µ–¥–∏—Ç–µ —Å—Ç—Ä–æ–∫—É: ")
    x = re.split("/1[A-Z]", text)
    print(x)

# def task9():
#     text = input("–í–≤–µ–¥–∏—Ç–µ —Å—Ç—Ä–æ–∫—É (–Ω–∞–ø—Ä–∏–º–µ—Ä, 'HelloWorldExample'): ")
#     re.sub(r"([A-Z])", r" \1", s)

# def task10():
#     text = input("–í–≤–µ–¥–∏—Ç–µ camelCase —Å—Ç—Ä–æ–∫—É: ")
#     snake = re.sub(r'([A-Z])', r'_\1', text).lower()
#     print("‚úÖ snake_case:", snake)


def main():
    tasks = {
        "1": ("–ù–∞–π—Ç–∏ 'a' —Å –Ω—É–ª–µ–º –∏–ª–∏ –±–æ–ª–µ–µ 'b'", task1),
        "2": ("–ù–∞–π—Ç–∏ 'a' —Å 2‚Äì3 'b'", task2),
        "3": ("–ù–∞–π—Ç–∏ —Å—Ç—Ä–æ—á–Ω—ã–µ —Å–ª–æ–≤–∞, —Å–æ–µ–¥–∏–Ω—ë–Ω–Ω—ã–µ '_'", task3),
        "4": ("–ù–∞–π—Ç–∏ –∑–∞–≥–ª–∞–≤–Ω—É—é –±—É–∫–≤—É + —Å—Ç—Ä–æ—á–Ω—ã–µ", task4),
        "5": ("–ù–∞–π—Ç–∏ —Å—Ç—Ä–æ–∫—É, –≥–¥–µ 'a' –∏ –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è –Ω–∞ 'b'", task5),
        "6": ("–ó–∞–º–µ–Ω–∏—Ç—å –ø—Ä–æ–±–µ–ª—ã, –∑–∞–ø—è—Ç—ã–µ, —Ç–æ—á–∫–∏ –Ω–∞ ':'", task6),
        "7": ("–ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å snake_case ‚Üí camelCase", task7),
        "8": ("–†–∞–∑–¥–µ–ª–∏—Ç—å —Å—Ç—Ä–æ–∫—É –ø–æ –∑–∞–≥–ª–∞–≤–Ω—ã–º –±—É–∫–≤–∞–º", task8),
        "9": ("–í—Å—Ç–∞–≤–∏—Ç—å –ø—Ä–æ–±–µ–ª—ã –º–µ–∂–¥—É —Å–ª–æ–≤–∞–º–∏ —Å –∑–∞–≥–ª–∞–≤–Ω–æ–π –±—É–∫–≤—ã", task9),
        "10": ("–ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å camelCase ‚Üí snake_case", task10),
    }

    while True:
        print("\n=== üß© Python RegEx Lab ===")
        for k, v in tasks.items():
            print(f"{k}. {v[0]}")
        print("0. –í—ã—Ö–æ–¥")

        choice = input("\n–í—ã–±–µ—Ä–∏—Ç–µ –∑–∞–¥–∞–Ω–∏–µ (0-10): ").strip()
        if choice == "0":
            print("üëã –í—ã—Ö–æ–¥ –∏–∑ –ø—Ä–æ–≥—Ä–∞–º–º—ã.")
            break
        elif choice in tasks:
            print(f"\n‚ñ∂ –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è: {tasks[choice][0]}\n")
            tasks[choice][1]()
        else:
            print("‚ö†Ô∏è –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")


if __name__ == "__main__":
    main()
